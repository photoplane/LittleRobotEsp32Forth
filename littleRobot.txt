\ *********************************************************************
\ programming a little robot
\    Filename:      littleRobot.txt
\    Date:          13 nov 2022
\    Updated:       13 nov2022
\    MCU:           ESP32-WROOM-32
\    Forth:         ESP32forth all versions 7.x++
\    Copyright:     Daniel GOURRIBON
\    Author:        Daniel GOURRIBON / adaptation: Marc PETREMANN
\    GNU General Public License
\ *********************************************************************

DEFINED? --littleRobot [if] forget --littleRobot  [then]
create --littleRobot

\ movements Robot many thanks to PETER FORTH

FORTH DEFINITIONS also 

LEDC 
DECIMAL 

15 constant PWMR1 
 5 constant PWMR2 
12 constant PWMR3 


1 constant chRIGHT1 
2 constant chRIGHT2
3 constant chRIGHT3

: init-pwm ( -- )
    PWMR1 chRIGHT1 ledcAttachPin 
    PWMR2 chRIGHT2 ledcAttachPin
    PWMR3 chRIGHT3 ledcAttachPin
    chRIGHT1 20000 10 ledcSetup 
    chRIGHT2 20000 10 ledcSetup
    chRIGHT3 40000 10 ledcSetup
  ; 

: servo1 ( speed -- ) 
    chRIGHT1 swap ledcWrite 
  ; 

: servo2 ( speed -- ) 
    chRIGHT2 swap ledcWrite 
  ; 

: servo3 ( speed -- ) 
    chRIGHT3 swap ledcWrite 
  ;



init-pwm 

100 value del 

: delay 
    del ms 
  ; 

: AV1 ( -- ) \ AV1 forward 1 RIGHT side
    15 servo1 
  ; 
: AV2 ( -- )\ AV2 forward 2 LEFT side
    50 servo2 
  ; 
: AV ( -- ) \ AV forward all
    AV1 AV2 
  ; 

: AR1 ( -- ) \ AR1 backward 1 RIGHT side
    48 servo1 
  ; 
: AR2 ( -- ) \ AR backward2 LEFT side
    15 servo2 
  ; 
: AR ( -- ) \ AR backward all
    AR1 AR2 
  ; 

: st1 ( -- ) \ STOP 1 RIGHT side
    0 servo1 
  ; 
: st2 ( -- ) \ STOP 2 LEFT side
    0 servo2 
  ; 
: S ( -- ) \ STOP all
    st1 st2 
  ; 

\ example

: alrt ( -- ) \ alrt go and return
    av 1000 ms 
    s ar 1000 ms S 
  ; 
 
\ commandes servo3  de roulette

: turn0 (  -- )  \ no move
    45 servo3
;

: turnD45 (   --  ) \ move right
    25 servo3
;

: turnG45 ( --  ) \ move left 
    65 servo3
;

: demo ( -- ) \ test example
    turnD45 2000 ms turn0 2000 ms turnG45 2000 ms turn0
;

: g-all turnG45 ar1 av2 ; 

: d-all turnD45 ar2 av1 ;

\ chronometers with 2 HALL sensors 

2 constant capt1 
variable c 
variable t1 
\ variable t2 

4 constant capt2 
variable d 
variable d1 
\ variable d2 

0 constant GPIO_PULLUP_ONLY 
capt1 input pinMode 

: ##: 
    <# 49 HOLD 68 HOLD 46 HOLD 67 HOLD 
    69 HOLD 83 HOLD 32 HOLD # # # 44 HOLD # #> 
    type 
  ; 

0 constant GPIO_PULLUP_ONLY
capt2 input pinMode 

: ###: 
    <# 50 HOLD 71 HOLD 46 HOLD 67 HOLD 
    69 HOLD 83 HOLD 32 HOLD # # # 44 HOLD # #> 
    type 
  ; 

: tempo 
    capt1 digitalRead 
    if 
        1 = ms-ticks dup t1 ! 
        c @ - ##: cr 
    else 
        t1 @ c ! 
    then 
  ; 
: tempi 
    capt2 digitalRead 
    if 
        1 = ms-ticks dup d1 ! d @   
        - ###: cr 
    else 
        d1 @ d ! 
    then 
  ; 


\ interrupts code

interrupts 

capt1 gpio_pulldown_en drop 

capt2 gpio_pulldown_en drop 

capt1 #GPIO_INTR_POSEDGE gpio_set_intr_type drop 

capt2 #GPIO_INTR_POSEDGE gpio_set_intr_type drop 

' tempo capt1 pinchange 

' tempi capt2 pinchange 

forth


 \ Ultrason littleRobot many thanks to Atle Bergstrom 

:  ... 200 ms ;
                                                  
decimal forth ledc 
 ...                                           
18 constant PIN_ECHO  
...
19 constant PIN_TRIG 
...                   
PIN_TRIG output pinmode 
...                                        
PIN_ECHO input pinmode 
...
: trig
    LOW PIN_TRIG pin 2 ms 
	HIGH PIN_TRIG pin 10 ms 
	LOW PIN_TRIG pin
;

: init
  PIN_TRIG OUTPUT pinMode PIN_ECHO INPUT pinMode
;
...

init

...

: echo
    PIN_ECHO pulsein  
;
...
: turnD90 st1 av2 500 ms S ; \ turn 90 degrees right
...
: ARH   AR 1000 ms g-all 1000 ms S turn0 ;  \ forward turn backward
 
...
: scan
    trig echo 250 < IF
      ARH  
    ELSE
        
    THEN
    
;

\ examples 

...

: top av  BEGIN scan key? UNTIL ;

...

: top: av  50 for scan next  ;

...

: top! 3000 ms av  BEGIN scan key? AV UNTIL S ; 

...

: top; av  40 0 do scan loop S ;

...

\ Unending 

: SansFin
    2000 ms BEGIN \ wait 
        turn0 scan key? AV 1000 ms AR 1000 ms turn0 AV
    UNTIL
    S
;





